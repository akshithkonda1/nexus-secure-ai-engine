name: CI
on:
  pull_request:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      # Frontend quality (adjust paths as needed)
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Frontend install
        working-directory: nexus/ai/frontend
        run: |
          corepack enable
          pnpm install
      - name: Frontend typecheck & build
        working-directory: nexus/ai/frontend
        run: |
          pnpm tsc --noEmit
          pnpm build

      # Log in to GHCR
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build image (tag with sha and branch)
      - name: Build image
        run: |
          docker build -t $REGISTRY/${IMAGE_NAME}:${{ github.sha }} .
          docker tag $REGISTRY/${IMAGE_NAME}:${{ github.sha }} $REGISTRY/${IMAGE_NAME}:ci-${{ github.ref_name }}

      # Trivy scan (container)
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'

      # Push image for later jobs
      - name: Push image
        run: |
          docker push $REGISTRY/${IMAGE_NAME}:${{ github.sha }}
          docker push $REGISTRY/${IMAGE_NAME}:ci-${{ github.ref_name }}

      # Integration smoke with compose + k6
      - name: Start service (compose)
        run: docker compose -f docker-compose.ci.yml up -d
      - name: Wait readiness
        run: |
          for i in {1..30}; do
            curl -fsS localhost:8080/readyz && exit 0 || sleep 2
          done
          echo "not ready"; docker logs $(docker ps -q); exit 1
      - name: k6 smoke
        uses: grafana/k6-action@v0.3.1
        with:
          filename: ./k6/smoke.js
        env:
          BASE_URL: http://localhost:8080

      - name: Tear down
        if: always()
        run: docker compose -f docker-compose.ci.yml down -v
