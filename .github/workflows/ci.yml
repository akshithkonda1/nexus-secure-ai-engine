name: ci
on:
  push: { branches: ["**"] }
  pull_request: {}

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff==0.6.9 black==24.8.0 mypy bandit pip-audit prometheus-client
      - name: Lint & type
        run: |
          ruff check .
          black --check .
          mypy || true  # relax during alpha; tighten later
      - name: Security
        run: |
          bandit -r . || true
          if [ -f requirements.txt ]; then pip-audit -r requirements.txt || true; fi

  docker:
    needs: qa
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}
          format: 'table'
          vuln-type: 'os,library'
          exit-code: '0'      # loosen in alpha
          severity: 'CRITICAL,HIGH'
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        run: docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

  k6:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: k6 smoke
        uses: grafana/k6-action@v0.3.1
        with:
          filename: tests/k6_smoke.js
        env:
          BASE_URL: ${{ secrets.ALPHA_BASE_URL }}
          ALPHA_ACCESS_TOKEN: ${{ secrets.ALPHA_ACCESS_TOKEN }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [docker, k6]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM
        uses: anchore/syft-action@v0.17.0
        with:
          image: ghcr.io/${{ github.repository }}:${{ github.sha }}
          output: sbom.spdx.json
      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: sbom.spdx.json
